From 79bffbeefccec30cc2ce9287faff4ada105e87cb Mon Sep 17 00:00:00 2001
From: martin <martin@163.com>
Date: Fri, 23 Nov 2018 14:03:34 +0800
Subject: [PATCH] Update contacts provider

Change-Id: I886b2b7a44b055f4d13ae210cfceb667c3c2af75
Signed-off-by: martin <martin@163.com>
---
 Android.mk                                         |  1 +
 README.md                                          | 17 +++++++++++
 .../providers/contacts/ContactsDatabaseHelper.java |  2 ++
 .../providers/contacts/ContactsProvider2.java      |  4 +++
 .../DataRowHandlerForBitcoinAccountAddress.java    | 35 ++++++++++++++++++++++
 .../DataRowHandlerForEthereumAccountAddress.java   | 35 ++++++++++++++++++++++
 6 files changed, 94 insertions(+)
 create mode 100644 README.md
 create mode 100644 src/com/android/providers/contacts/DataRowHandlerForBitcoinAccountAddress.java
 create mode 100644 src/com/android/providers/contacts/DataRowHandlerForEthereumAccountAddress.java

diff --git a/Android.mk b/Android.mk
index 8233e5b..ab05a16 100644
--- a/Android.mk
+++ b/Android.mk
@@ -7,6 +7,7 @@ LOCAL_MODULE_TAGS := optional
 LOCAL_SRC_FILES := $(call all-java-files-under, src)
 LOCAL_SRC_FILES += \
         src/com/android/providers/contacts/EventLogTags.logtags
+LOCAL_DEX_PREOPT := false
 
 LOCAL_JAVA_LIBRARIES := ext telephony-common
 
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..f823c5c
--- /dev/null
+++ b/README.md
@@ -0,0 +1,17 @@
+# Brahma Contacts
+
+The Contacts Provider is a powerful and flexible component that manages the device's central repository of data about people.
+
+## Support
+
+If you've found an error in this sample, please file an issue: https://github.com/BrahmaOS/brahmaos-packages-apps-Contacts/issues
+
+## License
+
+Copyright 2018 BRAHMACARIYA FOUNDATION LTD.
+
+Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at
+
+http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
diff --git a/src/com/android/providers/contacts/ContactsDatabaseHelper.java b/src/com/android/providers/contacts/ContactsDatabaseHelper.java
index 76fe173..be2dcab 100644
--- a/src/com/android/providers/contacts/ContactsDatabaseHelper.java
+++ b/src/com/android/providers/contacts/ContactsDatabaseHelper.java
@@ -1006,6 +1006,8 @@ public class ContactsDatabaseHelper extends SQLiteOpenHelper {
             android.provider.ContactsContract.CommonDataKinds.Photo.CONTENT_ITEM_TYPE,
             GroupMembership.CONTENT_ITEM_TYPE,
             Note.CONTENT_ITEM_TYPE,
+            ContactsContract.CommonDataKinds.EthereumAccountAddress.CONTENT_ITEM_TYPE,
+            ContactsContract.CommonDataKinds.BitcoinAccountAddress.CONTENT_ITEM_TYPE,
             Event.CONTENT_ITEM_TYPE,
             Website.CONTENT_ITEM_TYPE,
             Relation.CONTENT_ITEM_TYPE,
diff --git a/src/com/android/providers/contacts/ContactsProvider2.java b/src/com/android/providers/contacts/ContactsProvider2.java
index a5af51f..738ae3c 100644
--- a/src/com/android/providers/contacts/ContactsProvider2.java
+++ b/src/com/android/providers/contacts/ContactsProvider2.java
@@ -1722,6 +1722,10 @@ public class ContactsProvider2 extends AbstractContactsProvider
                         getMaxDisplayPhotoDim(), getMaxThumbnailDim()));
         handlerMap.put(Note.CONTENT_ITEM_TYPE,
                 new DataRowHandlerForNote(context, dbHelper, contactAggregator));
+        handlerMap.put(ContactsContract.CommonDataKinds.EthereumAccountAddress.CONTENT_ITEM_TYPE,
+                new DataRowHandlerForEthereumAccountAddress(context, dbHelper, contactAggregator));
+        handlerMap.put(ContactsContract.CommonDataKinds.BitcoinAccountAddress.CONTENT_ITEM_TYPE,
+                new DataRowHandlerForBitcoinAccountAddress(context, dbHelper, contactAggregator));
         handlerMap.put(Identity.CONTENT_ITEM_TYPE,
                 new DataRowHandlerForIdentity(context, dbHelper, contactAggregator));
     }
diff --git a/src/com/android/providers/contacts/DataRowHandlerForBitcoinAccountAddress.java b/src/com/android/providers/contacts/DataRowHandlerForBitcoinAccountAddress.java
new file mode 100644
index 0000000..2ecb6cf
--- /dev/null
+++ b/src/com/android/providers/contacts/DataRowHandlerForBitcoinAccountAddress.java
@@ -0,0 +1,35 @@
+package com.android.providers.contacts;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.provider.ContactsContract.CommonDataKinds.BitcoinAccountAddress;
+
+import com.android.providers.contacts.aggregation.AbstractContactAggregator;
+
+
+/**
+ * Handler for [Bitcoin Account Address] data rows.
+ */
+public class DataRowHandlerForBitcoinAccountAddress extends DataRowHandler {
+
+    public DataRowHandlerForBitcoinAccountAddress(Context context,
+                                                   ContactsDatabaseHelper dbHelper,
+                                                   AbstractContactAggregator aggregator) {
+        super(context, dbHelper, aggregator, BitcoinAccountAddress.CONTENT_ITEM_TYPE);
+    }
+
+    @Override
+    public boolean hasSearchableData() {
+        return true;
+    }
+
+    @Override
+    public boolean containsSearchableColumns(ContentValues values) {
+        return values.containsKey(BitcoinAccountAddress.ADDRESS);
+    }
+
+    @Override
+    public void appendSearchableData(SearchIndexManager.IndexBuilder builder) {
+        builder.appendContentFromColumn(BitcoinAccountAddress.ADDRESS);
+    }
+}
diff --git a/src/com/android/providers/contacts/DataRowHandlerForEthereumAccountAddress.java b/src/com/android/providers/contacts/DataRowHandlerForEthereumAccountAddress.java
new file mode 100644
index 0000000..185eb57
--- /dev/null
+++ b/src/com/android/providers/contacts/DataRowHandlerForEthereumAccountAddress.java
@@ -0,0 +1,35 @@
+package com.android.providers.contacts;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.provider.ContactsContract.CommonDataKinds.EthereumAccountAddress;
+
+import com.android.providers.contacts.aggregation.AbstractContactAggregator;
+
+
+/**
+ * Handler for [Ethereum Account Address] data rows.
+ */
+public class DataRowHandlerForEthereumAccountAddress extends DataRowHandler {
+
+    public DataRowHandlerForEthereumAccountAddress(Context context,
+                                                   ContactsDatabaseHelper dbHelper,
+                                                   AbstractContactAggregator aggregator) {
+        super(context, dbHelper, aggregator, EthereumAccountAddress.CONTENT_ITEM_TYPE);
+    }
+
+    @Override
+    public boolean hasSearchableData() {
+        return true;
+    }
+
+    @Override
+    public boolean containsSearchableColumns(ContentValues values) {
+        return values.containsKey(EthereumAccountAddress.ADDRESS);
+    }
+
+    @Override
+    public void appendSearchableData(SearchIndexManager.IndexBuilder builder) {
+        builder.appendContentFromColumn(EthereumAccountAddress.ADDRESS);
+    }
+}
-- 
2.7.4

